locale: fr-FR
namespace: js
translations:
    ###########################################################################
    # General
    ###########################################################################

    - key: general.survey_intro_js2019
      t: >
          The JavaScript world could use a bit of classification.
          Depuis 2016, ce questionnaire a collecté chaque année
          des données venant de plus de 20 000 développeurs pour identifier les tendances actuelles et à venir.
          Participez à ce questionnaire et aidez-nous à trouver les librairies qui
          apportent le plus de satisfaction aux développeurs, celles qu'ils souhaitent apprendre prochainement, et bien plus.
    ###########################################################################
    # Sections
    ###########################################################################

    - key: sections.syntax.title
      t: Syntaxe
    - key: sections.syntax.description
      t: La grammaire du JavaScript.

    - key: sections.language.title
      t: Langage
    - key: sections.language.description
      t: Le vocabulaire de JavaScript.

    - key: sections.data_structures.title
      t: Structures de données
    - key: sections.data_structures.description
      t: Comment vous stockez et manipulez vos données.

    - key: sections.browser_apis.title
      t: Browser APIs
    - key: sections.browser_apis.description
      t: Les fonctionnalités fournies par le navigateur.

    - key: sections.other_features.title
      t: Autres fonctionnalités
    - key: sections.other_features.description
      t: Autres technologies et patrons de conception

    - key: sections.patterns.title
      t: Patrons de conception
    - key: sections.patterns.description
      t: Comment vous préférez écrire du code

    - key: sections.javascript_flavors.title
      t: Les déclinaisons de JavaScript
    - key: sections.javascript_flavors.description
      t: Les langages qui se compilent en JavaScript

    - key: sections.front_end_frameworks.title
      t: Frameworks front-end
    - key: sections.front_end_frameworks.description
      t: Frameworks et librairies front-end

    - key: sections.datalayer.title
      t: Couche de données
    - key: sections.datalayer.description
      t: Chargement et gestion des données dans votre application

    - key: sections.back_end_frameworks.title
      t: Frameworks back-end
    - key: sections.back_end_frameworks.description
      t: JavaScript côté serveur

    - key: sections.testing.title
      t: Tests
    - key: sections.testing.description
      t: Outils pour tester votre code

    - key: sections.mobile_desktop.title
      t: Mobile & Desktop
    - key: sections.mobile_desktop.description
      t: JavaScript pour application mobiles et desktop

    ###########################################################################
    # Options
    ###########################################################################

    # CSS for print
    - key: options.css_for_print.0
      t: Je n'écris (presque) jamais de styles d'impression
    - key: options.css_for_print.1
      t: J'écris occasionnellement des styles d'impression
    - key: options.css_for_print.2
      t: J'écris des styles d'impression dans la plupart de mes projets
    - key: options.css_for_print.3
      t: Mon travail est centré sur les styles d'impression

    # CSS for email
    - key: options.css_for_email.0
      t: Je n'écris (presque) jamais de CSS pour les messageries électroniques
    - key: options.css_for_email.1
      t: J'écris occasionnellement du CSS pour les messageries électroniques
    - key: options.css_for_email.2
      t: J'écris du CSS pour les messageries électroniques dans la plupart de mes projets
    - key: options.css_for_email.3
      t: Mon travail est centré sur le CSS pour les messageries électroniques

    ###########################################################################
    # Features
    ###########################################################################

    # syntax
    - key: features.destructuring
      t: Déstructuration
    - key: features.destructuring.description
      t: 'Exemple: `const { foo } = bar`'
    - key: features.spread_operator
      t: Opérateur de propagation
    - key: features.spread_operator.description
      t: 'Exemple: `[...array1, ...array2]`'
    - key: features.arrow_functions
      t: Fonctions fléchées
    - key: features.arrow_functions.description
      t: 'Exemple: `const foo = () => {}`'

    # language
    - key: features.proxies
      t: Proxies
    - key: features.async_await
      t: Async/Await
    - key: features.promises
      t: Promesses
    - key: features.decorators
      t: Décorateurs
    - key: features.decorators.description
      t: >
          Dans sa forme la plus simple, un décorateur est en fait une façon de  
          d'inclure un morceau de code dans un autre— litéralement le “décorer”.
    # data structures
    - key: features.maps
      t: Maps
    - key: features.sets
      t: Sets
    - key: features.typed_arrays
      t: Tableaux typés
    - key: array_prototype_flat
      t: Array.prototype.flat

    # browser apis
    - key: features.service_workers
      t: Service Workers
    - key: features.local_storage
      t: LocalStorage
    - key: features.i18n
      t: i18n
    - key: features.web_components
      t: Web Components
    - key: features.web_audio
      t: Web Audio API
    - key: features.webgl
      t: WebGL
    - key: features.web_animations
      t: Web Animations API
    - key: features.webrtc
      t: WebRTC
    - key: features.web_speech
      t: Web Speech API
    - key: features.webvr
      t: WebVR
    - key: features.websocket
      t: Websocket
    - key: features.fetch
      t: Fetch API

    # other features
    - key: features.pwa
      t: Progressive Web Apps (PWA)
    - key: features.wasm
      t: WebAssembly (WASM)

    # patterns
    - key: patterns.object_oriented_programming
      t: Programmation Orientée Objet
    - key: features.functional_programming
      t: Programmation Fonctionnelle
    - key: features.reactive_programming
      t: Programmation Réactive

    ###########################################################################
    # Opinions
    ###########################################################################

    - key: opinions.js_moving_in_right_direction
      t: JavaScript se développe dans la bonne direction

    - key: opinions.building_js_apps_overly_complex
      t: Construire des applications JavaScript apps est devenu trop complexe

    - key: opinions.js_over_used_online
      t: JavaScript est sur-utilisé sur internet

    - key: opinions.enjoy_building_js_apps
      t: J'aime construire des applications JavaScript

    - key: opinions.would_like_js_to_be_main_lang
      t: J'aimerai que JavaScript devienne mon langage de programmation principal

    - key: opinions.js_ecosystem_changing_to_fast
      t: L'écosystème JavaScript change beaucoup trop vite

    - key: opinions.missing_from_js
      t: Qu'est-ce qu'il manque encore à JavaScript, selon vous ?
    - key: opinions.missing_from_js.description
      t: Les fonctionnalités que vous aimeriez voir intégrer à JavaScript un jour.